{"version":3,"sources":["components/TextSearch/TextSearch.module.scss","components/DoctorsDetails/DoctorDetails/DoctorDetails.module.scss","components/DoctorsDetails/DoctorsDetails.module.scss","images/logo.png","components/Spinner/Spinner.module.scss","components/DoctorsDetails/LoadMoreBtn/LoadMoreBtn.module.scss","components/ScrollTopBtn/ScrollTopBtn.module.scss","data/doctors.csv","util/toUpperAll.js","util/csvData.js","util/arrayUnique.js","util/commonWords.js","util/toUpperAllArr.js","components/Spinner/Spinner.js","components/TextSearch/TextSearch.js","components/DoctorsDetails/DoctorDetails/DoctorDetails.js","components/DoctorsDetails/LoadMoreBtn/LoadMoreBtn.js","components/DoctorsDetails/DoctorsDetails.js","components/ScrollTopBtn/ScrollTopBtn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","toUpperAll","str","i","x","trim","split","length","toUpperCase","substr","toLowerCase","includes","T","j","y","join","d3","require","csvData","csv","callback","then","data","arrayUnique","arr","filter","a","indexOf","commonWords","b","useToUpperAll","map","item","value","toUperAllArr","Spinner","className","styles","Loader","classNames","TextSearch","servList","regionList","locList","nameTag","servTag","regionTag","locTag","invalidTag","updated","useState","userTxt","setUserTxt","keywords","setKeywords","submitKeywordsHandler","K","concat","removeKeywordsHandler","txt","newKeywords","useEffect","$","stop","delay","slideUp","autoCompleteList","servOptions","key","regionOptions","locOptions","Fragment","nameTags","KeywordTag","NameTag","onClick","CloseIco","servTags","ServTag","regionTags","locTags","LocTag","invalidTags","InvalidTag","searchTags","KeywordTagContainer","Container","Title","SearchInput","type","placeholder","list","onChange","e","target","onKeyDown","id","SubmitBtn","Description","doctorDetails","details","ico","icoClass","Ico","name","Name","servicesTypes","ServicesTypes","gmapUrl","encodeURIComponent","address","HasIcon","href","rel","tel","price","replace","daySeqs","seq","Seq","time","SeqItem","Key","DoctorDetail","DoctorDetailInner","LoadMoreBtn","loadMore","Btn","pluralize","DoctorsDetails","doctors","fullListLength","feedNum","setFeedNum","recordsCountTxt","listBody","index","_key","CSSTransition","timeout","DoctorDetails","loadMoreBtn","DrDetailsSection","TotalRecords","TransitionGroup","component","Row","ScrollTopBtn","animate","scrollTop","scrollTopBtn","App","setDoctors","setServList","setRegionList","setLocList","setNameTag","setServTag","setRregionTag","setLocTag","setInvalidTag","filteredDr","setFilteredDr","doctorsCsv","forEach","region","location","sort","serviceTypes","flat","regions","Region","locations","Location","pageBody","searchTxtArr","_nameTag","_servTag","_regionTag","_locTag","newDrList","push","_invalidTag","toUpperAllArr","src","logo","alt","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba7190eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextSearch\":\"TextSearch_TextSearch__20Juu\",\"Container\":\"TextSearch_Container__cgPlr\",\"Title\":\"TextSearch_Title__2PTnh\",\"SearchInput\":\"TextSearch_SearchInput__2Slm-\",\"SubmitBtn\":\"TextSearch_SubmitBtn__2XTfU\",\"Description\":\"TextSearch_Description__30Mxt\",\"KeywordTagContainer\":\"TextSearch_KeywordTagContainer__3sKdV\",\"KeywordTag\":\"TextSearch_KeywordTag__22Equ\",\"ServTag\":\"TextSearch_ServTag__1eKgJ\",\"NameTag\":\"TextSearch_NameTag__3alUj\",\"InvalidTag\":\"TextSearch_InvalidTag__2d3ps\",\"CloseIco\":\"TextSearch_CloseIco__VVLmz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DoctorDetail\":\"DoctorDetails_DoctorDetail__1XnvT\",\"DoctorDetailInner\":\"DoctorDetails_DoctorDetailInner__3S6RF\",\"HasIcon\":\"DoctorDetails_HasIcon__1JXri\",\"Ico\":\"DoctorDetails_Ico__3Xoc1\",\"Name\":\"DoctorDetails_Name__1RHES\",\"ServicesTypes\":\"DoctorDetails_ServicesTypes__2pYq_\",\"Seq\":\"DoctorDetails_Seq__3tP4Z\",\"SeqItem\":\"DoctorDetails_SeqItem__sutvI\",\"Key\":\"DoctorDetails_Key__DfyBK\",\"Time\":\"DoctorDetails_Time__P7VFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrDetailsSection\":\"DoctorsDetails_DrDetailsSection__2WZaZ\",\"Container\":\"DoctorsDetails_Container__3Y7dJ\",\"TotalRecords\":\"DoctorsDetails_TotalRecords__1s0Iu\",\"Row\":\"DoctorsDetails_Row__2wUq2\"};","module.exports = __webpack_public_path__ + \"static/media/logo.4f8064a2.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3KD8u\",\"load3\":\"Spinner_load3__3soc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"LoadMoreBtn_Btn__2B_U6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollTopBtn\":\"ScrollTopBtn_scrollTopBtn__3Diqt\"};","module.exports = __webpack_public_path__ + \"static/media/doctors.d39fa9dc.csv\";","const toUpperAll = str => {\r\n    // split by \" \" --\r\n    str = str.trim().split(\" \");\r\n    for (var i = 0, x = str.length; i < x; i++) {\r\n        str[i] = str[i][0].toUpperCase() + str[i].substr(1).toLowerCase();\r\n        // split by \"-\" --\r\n        if(str[i].includes('-')){\r\n            let T = str[i].split(\"-\");\r\n            for (var j = 1, y = T.length; j < y; j++) {\r\n                T[j] = T[j][0].toUpperCase() + T[j].substr(1).toLowerCase();\r\n            }\r\n            str[i] = T.join(\"-\");\r\n        }      \r\n        // [end] split by \"-\" --\r\n    }\r\n    return str.join(\" \");\r\n}\r\nexport default toUpperAll;","const d3 = require(\"d3\");\r\nconst csvData = (csv, callback) => {\r\n    d3.csv(csv).then(data => {\r\n        callback(data);   \r\n    });\r\n}\r\nexport default csvData;","const arrayUnique = arr => arr.filter((x, i, a) => a.indexOf(x) === i);\r\nexport default arrayUnique;","import toUpperAll from './toUpperAll.js';\r\nconst commonWords = (a, b, useToUpperAll=false) => {\r\n    if(useToUpperAll){\r\n        a = a.map(item => toUpperAll(item));\r\n        b = b.map(item => toUpperAll(item));\r\n    }else{\r\n        a = a.map(item => item.toLowerCase());\r\n        b = b.map(item => item.toLowerCase());\r\n    }    \r\n    return a.filter(value => b.includes(value));\r\n}\r\nexport default commonWords;","import toUpperAll from './toUpperAll.js';\r\nconst toUperAllArr = arr => {\r\n    return arr.map(i => toUpperAll(i))\r\n}\r\nexport default toUperAllArr;","import React from 'react';\r\nimport styles from './Spinner.module.scss';\r\n\r\nconst Spinner = () => {\r\n    return <div className={styles.Loader}><div>Loading...</div></div>;\r\n};\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\r\n\r\nimport styles from './TextSearch.module.scss';\r\nimport arrayUnique from '../../util/arrayUnique.js';\r\nimport $ from 'jquery';\r\nconst classNames = require('classnames');\r\n\r\nconst TextSearch = ({ servList, regionList, locList, nameTag, servTag, regionTag, locTag, invalidTag, updated }) => {\r\n    const [userTxt, setUserTxt] = useState('');\r\n    const [keywords, setKeywords] = useState([]);\r\n\r\n    const submitKeywordsHandler = () => {\r\n        let K = arrayUnique(keywords.concat([userTxt.trim().toLowerCase()]));\r\n        K = K.filter(item => item !== '');\r\n        setKeywords(K);\r\n        setUserTxt('');\r\n    }\r\n\r\n    const removeKeywordsHandler = txt => {\r\n        const tags = [...nameTag, ...servTag, ...regionTag, ...locTag, ...invalidTag];\r\n        const newKeywords = tags.filter(item => item !== txt);\r\n        setKeywords(newKeywords);\r\n    }\r\n\r\n    // fade out description text after 20 sec. --\r\n    useEffect(() => {        \r\n        $('#description').stop().delay(20000).slideUp(800);            \r\n    }, []);\r\n\r\n    // update search when keywords is updated --\r\n    useEffect(() => {\r\n        updated(keywords);\r\n    // eslint-disable-next-line\r\n    }, [keywords]);\r\n\r\n    let autoCompleteList = null;\r\n    if(userTxt.length){\r\n        const servOptions = servList.map(item => {\r\n            return <option value={item} key={item}/>;\r\n        });\r\n        \r\n        const regionOptions = regionList.map(item => {\r\n            return <option value={item} key={item}/>;\r\n        });\r\n\r\n        const locOptions = locList.map(item => {\r\n            return <option value={item} key={item}/>;\r\n        });\r\n\r\n        autoCompleteList = <React.Fragment>\r\n                {servOptions}\r\n                {regionOptions}\r\n                {locOptions}\r\n            </React.Fragment>\r\n    }\r\n\r\n    // search tags --\r\n    let nameTags = null;\r\n    if(nameTag.length){\r\n        nameTags = nameTag.map(item => {\r\n            return <div className={classNames(styles.KeywordTag, styles.NameTag)} \r\n                onClick={() => removeKeywordsHandler(item)} key={item}>\r\n                    <i className=\"fas fa-user-md\"></i> {item} <i className={classNames(\"fas fa-times\", styles.CloseIco)}></i>\r\n                </div>;\r\n        }); \r\n    }\r\n    let servTags = null;\r\n    if(servTag.length){\r\n        servTags = servTag.map(item => {\r\n            return <div className={classNames(styles.KeywordTag, styles.ServTag)} \r\n                onClick={() => removeKeywordsHandler(item)} key={item}>\r\n                    <i className=\"fas fa-hand-holding-medical\"></i> {item} <i className={classNames(\"fas fa-times\", styles.CloseIco)}></i>\r\n                </div>;\r\n        }); \r\n    }\r\n    let regionTags = null;\r\n    if(regionTag.length){\r\n        regionTags = regionTag.map(item => {\r\n            return <div className={classNames(styles.KeywordTag, styles.regionTag)} \r\n                onClick={() => removeKeywordsHandler(item)} key={item}>\r\n                    <i className=\"fas fa-map-marked\"></i> {item} <i className={classNames(\"fas fa-times\", styles.CloseIco)}></i>\r\n                </div>;\r\n        }); \r\n    }\r\n    let locTags = null;\r\n    if(locTag.length){\r\n        locTags = locTag.map(item => {\r\n            return <div className={classNames(styles.KeywordTag, styles.LocTag)} \r\n                onClick={() => removeKeywordsHandler(item)} key={item}>\r\n                    <i className='fas fa-map-marker-alt'></i> {item} <i className={classNames(\"fas fa-times\", styles.CloseIco)}></i>\r\n                </div>;\r\n        });\r\n    }\r\n    let invalidTags = null;\r\n    if(invalidTag.length){\r\n        invalidTags = invalidTag.map(item => {\r\n            return <div className={classNames(styles.KeywordTag, styles.InvalidTag)} \r\n                onClick={() => removeKeywordsHandler(item)} key={item}>\r\n                    <i className=\"fas fa-exclamation-triangle\"></i> {item} <i className={classNames(\"fas fa-times\", styles.CloseIco)}></i>\r\n                </div>;\r\n        });\r\n    }\r\n\r\n    const searchTags = <div className={classNames(styles.KeywordTagContainer, 'container')}>{nameTags}{servTags}{regionTags}{locTags}{invalidTags}</div>\r\n    // [end] search tags --\r\n      \r\n\r\n    return (<section className={styles.TextSearch}>\r\n        <div className={classNames(styles.Container, 'container')}>\r\n            <h1 className={styles.Title}>Doctors Search</h1>\r\n            <div>\r\n                <input className={styles.SearchInput} type=\"text\"                     \r\n                    placeholder=\"Type here to search\" \r\n                    list=\"autoCompleteList\" \r\n                    value={userTxt}\r\n                    onChange={e => setUserTxt((e.target.value))} \r\n                    onKeyDown={e => {\r\n                        if (e.key === 'Enter') {\r\n                            submitKeywordsHandler();\r\n                        }\r\n                    }} />\r\n                <datalist id=\"autoCompleteList\">{autoCompleteList}</datalist>\r\n                <div className={styles.SubmitBtn} \r\n                    onClick={submitKeywordsHandler}>\r\n                        <i className=\"fas fa-arrow-right\"></i>\r\n                    </div>                \r\n            </div> \r\n            <p className={styles.Description} id=\"description\">\r\n                Type in the text box above and press <i className=\"fas fa-arrow-right\"></i> button or hit enter to make a search.<br/>\r\n                For multiple keyword searches, enter text and press <i className=\"fas fa-arrow-right\"></i> again, it will then search based on the previous result.\r\n            </p>\r\n        </div>\r\n        {searchTags}\r\n    </section>);\r\n};\r\nexport default TextSearch;\r\n","import React from 'react';\r\nimport styles from './DoctorDetails.module.scss';\r\nconst classNames = require('classnames');\r\n\r\nconst doctorDetails = ({ details }) => {\r\n    const ico = icoClass => <div className={styles.Ico}><i className={icoClass}></i></div>\r\n\r\n    const name = <div className={styles.Name}>{details['Name']}</div>;\r\n\r\n    const servicesTypes = <div className={styles.ServicesTypes}>{\r\n        details['Service Type'].map(item =>{\r\n            return <div key={item}>{item}</div>\r\n        })\r\n    }</div>\r\n\r\n    const gmapUrl = `https://www.google.com/maps/search/${encodeURIComponent(details['Address2'])}`;\r\n    const address = <div className={styles.HasIcon}> \r\n            {ico('fas fa-map-marker-alt')} \r\n            <a href={gmapUrl} target=\"_blank\" rel=\"noopener noreferrer\">{details['Address1']} - {details['Address2']}</a>\r\n        </div>\r\n\r\n    const tel = <div className={styles.HasIcon}>\r\n            {ico('fas fa-phone-alt')} \r\n            <div>{\r\n                [details['Telephone1'], details['Telephone2']].map(item =>{\r\n                    return item.length ? <a href={`tel:${item}`} key={item}>{item}</a> : null\r\n                })\r\n            }</div>        \r\n        </div>\r\n\r\n    const price = <div className={styles.HasIcon}>\r\n            {ico('fas fa-dollar-sign')} \r\n        <div>{ details['Price'].length ? (details['Price'].replace(/,+$/,'')).replace(/,/g, ', ') : '/' }</div>\r\n        \r\n    </div>\r\n    \r\n    const daySeqs = [\r\n        {'seq': details['Day Seq 1'], 'time':details['Day Seq 1 time']},\r\n        {'seq': details['Day Seq 2'], 'time':details['Day Seq 2 time']},\r\n        {'seq': details['Day Seq 3'], 'time':details['Day Seq 3 time']},\r\n        {'seq': details['Day Seq 4'], 'time':details['Day Seq 4 time']}\r\n    ];\r\n    const seq = <div className={styles.Seq}>{\r\n        daySeqs.map(({seq, time}) =>{\r\n            if (seq && time){\r\n                return <div className={styles.SeqItem} key={`${seq}-${time}`}><div className={styles.Key}>{seq} :</div><div className=\"time\">{time}</div></div>\r\n            }\r\n            return null;\r\n        })\r\n    }</div>  \r\n    \r\n    return (\r\n        <div className={classNames(styles.DoctorDetail, 'col-12', 'col-lg-6')}>\r\n            <div className={styles.DoctorDetailInner}>\r\n                {name}\r\n                {servicesTypes}\r\n                {address}\r\n                {tel}\r\n                {price}\r\n                {seq}\r\n            </div>            \r\n        </div>  \r\n    );\r\n};\r\nexport default doctorDetails;\r\n","import React from 'react';\r\nimport styles from './LoadMoreBtn.module.scss';\r\n\r\nconst LoadMoreBtn = ({ loadMore }) => { \r\n    \r\n    return (\r\n        <div onClick={loadMore} className={styles.Btn}>Load More</div>  \r\n    );\r\n};\r\nexport default LoadMoreBtn;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './DoctorsDetails.module.scss';\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\nimport DoctorDetails from './DoctorDetails/DoctorDetails';\r\nimport LoadMoreBtn from './LoadMoreBtn/LoadMoreBtn';\r\nconst pluralize = require('pluralize')\r\nconst classNames = require('classnames');\r\n\r\nconst feedPerBatch = 10;\r\n\r\nconst DoctorsDetails = ({doctors, fullListLength}) => {\r\n    const [feedNum, setFeedNum] = useState(feedPerBatch);\r\n\r\n    const loadFeedsHandler = () =>{\r\n        setFeedNum(feedNum + feedPerBatch);\r\n    }\r\n\r\n    // reset num of feed when doctor list is updated --\r\n    useEffect(() => {\r\n        setFeedNum(feedPerBatch);\r\n    }, [doctors]);\r\n\r\n    let recordsCountTxt = doctors.length < fullListLength ?\r\n        `${pluralize('record', doctors.length, true)} found in this search` : \r\n        `${pluralize('record', fullListLength, true)} in total`;\r\n\r\n    let listBody = null;\r\n    if (doctors.length){\r\n        listBody = doctors\r\n        .map((item, index) => {\r\n            if (index >= feedNum){                \r\n                return null;\r\n            }\r\n            const _key = `${index}-${item['Doctor ID']}-${item['Name']}-${item['Service Type']}-${item['Address1']}-${item['Price']}-${item['Region']}-${item['Location']}`;\r\n            return (<CSSTransition key={_key} classNames=\"fade\" timeout={500}>\r\n                    <DoctorDetails details={item}/>\r\n                </CSSTransition>);\r\n        });\r\n    }\r\n\r\n    let loadMoreBtn = null;\r\n    if (doctors.length && doctors.length > feedNum){\r\n        loadMoreBtn = <LoadMoreBtn loadMore={loadFeedsHandler} />;\r\n    }\r\n    return (\r\n        <section className={styles.DrDetailsSection}>            \r\n            <div className={`${styles.Container} container`}>\r\n                <div className={styles.TotalRecords}>{recordsCountTxt}</div>\r\n                <TransitionGroup component=\"div\" className={classNames('row', styles.Row)}>\r\n                    {listBody}\r\n                </TransitionGroup>                         \r\n                {loadMoreBtn}\r\n            </div>\r\n        </section>          \r\n    );\r\n};\r\nexport default DoctorsDetails;\r\n","import React from 'react';\r\nimport styles from './ScrollTopBtn.module.scss';\r\nimport $ from 'jquery';\r\n\r\nconst ScrollTopBtn = () => {\r\n    const scrollTopHandler = ()=> {\r\n        $(\"html, body\").stop().animate({scrollTop:0}, '500');\r\n    }\r\n\r\n    return <div onClick={scrollTopHandler} className={styles.scrollTopBtn}><i className=\"fas fa-chevron-up\"></i></div> ;\r\n};\r\nexport default ScrollTopBtn;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.scss';\r\nimport toUpperAll from './util/toUpperAll.js';\r\nimport csvData from './util/csvData.js';\r\nimport arrayUnique from './util/arrayUnique.js';\r\nimport commonWords from './util/commonWords.js';\r\n// import toLowerCaseArr from './util/toLowerCaseArr.js';\r\nimport toUpperAllArr from './util/toUpperAllArr.js';\r\n\r\nimport logo from './images/logo.png';\r\n\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport TextSearch from './components/TextSearch/TextSearch';\r\nimport DoctorsDetails from './components/DoctorsDetails/DoctorsDetails';\r\nimport ScrollTopBtn from './components/ScrollTopBtn/ScrollTopBtn';\r\n\r\nimport doctorsCsv from './data/doctors.csv';\r\nrequire('bootstrap')\r\n\r\nconst App = () => {\r\n  const [doctors, setDoctors] = useState(null);\r\n  const [servList, setServList] = useState(null);\r\n  const [regionList, setRegionList] = useState(null);\r\n  const [locList, setLocList] = useState(null); \r\n  \r\n  const [nameTag, setNameTag] = useState([]);\r\n  const [servTag, setServTag] = useState([]);\r\n  const [regionTag, setRregionTag] = useState([]);\r\n  const [locTag, setLocTag] = useState([]);\r\n  const [invalidTag, setInvalidTag] = useState([]);\r\n  const [filteredDr, setFilteredDr] = useState([]);\r\n\r\n  // update filtered doctor list by search text --\r\n  const searchTextHandler = txt => {\r\n    const searchTxtArr = txt.map(item => item.trim().toLowerCase())\r\n    \r\n    if(searchTxtArr.length){\r\n      // find macthed tags --\r\n      let _nameTag = [];\r\n      const _servTag = commonWords(searchTxtArr, servList, true);\r\n      const _regionTag = commonWords(searchTxtArr, regionList, true);\r\n      const _locTag = commonWords(searchTxtArr, locList, true); \r\n\r\n      let newDrList = doctors;\r\n\r\n      // filter by name --\r\n      newDrList = newDrList.filter(item => {\r\n        const itemMatched = searchTxtArr.includes(item['Name'].toLowerCase());\r\n        if(itemMatched){\r\n          _nameTag.push(item['Name']);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      _nameTag = arrayUnique(_nameTag).sort();\r\n      newDrList = newDrList.length ? newDrList : doctors;      \r\n\r\n      // filter by services types --\r\n      if(_servTag.length){\r\n        newDrList = newDrList.filter(item => {\r\n          const itemMatched = commonWords(_servTag, item['Service Type'], true);\r\n          return itemMatched.length > 0;\r\n        }); \r\n      }\r\n\r\n      // filter by regions --\r\n      if(_regionTag.length){\r\n        newDrList = newDrList.filter(item => {      \r\n          return _regionTag.includes(item['Region']);\r\n        });\r\n      }\r\n\r\n      // filter by locations --\r\n      if(_locTag.length){\r\n        newDrList = newDrList.filter(item => {\r\n          return _locTag.includes(item['Location']);\r\n        }); \r\n      }\r\n\r\n      const _invalidTag =  toUpperAllArr(searchTxtArr).filter(x => ![...toUpperAllArr(_nameTag), ...toUpperAllArr(_servTag), ...toUpperAllArr(_regionTag), ...toUpperAllArr(_locTag)].includes(x));\r\n\r\n      setNameTag(_nameTag);\r\n      setServTag(_servTag);\r\n      setRregionTag(_regionTag);\r\n      setLocTag(_locTag);     \r\n      setInvalidTag(_invalidTag);\r\n      setFilteredDr(newDrList);      \r\n    }else{\r\n      //if search text is empty, reset to initial state --\r\n      setNameTag([]);\r\n      setServTag([]);\r\n      setRregionTag([]);\r\n      setLocTag([]);\r\n      setInvalidTag([]);\r\n      setFilteredDr(doctors);\r\n    }\r\n  }\r\n  // [end] update filtered doctor list by search text --\r\n\r\n  // fetch csv data --\r\n  useEffect(() => {\r\n    csvData(doctorsCsv, data => {\r\n      data.forEach(item => {\r\n        // correct text --\r\n        let region = item['Region'];\r\n        region = region.replace(\"New Terriroties\", \"New Territories\")\r\n        .replace(\"Hong Kong Island\", \"Hong Kong\");\r\n        // .replace(\"Hong Kong\", \"Hong Kong Island\");\r\n        item['Region'] = toUpperAll(region);\r\n\r\n        let location = item['Location'];\r\n        location = location.replace(\"hunghom\", \"Hung Hom\")        \r\n        .replace(\"Hunghom\", \"Hung Hom\")\r\n        .replace(\"Kenndy Town\", \"Kennedy Town\")\r\n        .replace(\"Kennedy Twon\", \"Kennedy Town\")\r\n        .replace(\"MongKok\", \"Mong Kok\")\r\n        .replace(\"Mongkok\", \"Mong Kok\")\r\n        .replace(\"Ngan Tau Kok\", \"Ngau Tau Kok\")\r\n        .replace(\"Prinece Edward\", \"Prince Edward\")\r\n        .replace(\"Shatin\", \"Sha Tin\");\r\n        item['Location'] = toUpperAll(location);\r\n        // [end] correct text --\r\n\r\n        // split services types --\r\n        item['Service Type'] = item['Service Type'].toUpperCase().split('/');\r\n        // [end] split services types --\r\n      });\r\n      \r\n      // sort by doctor's name --\r\n      data.sort((a, b) => {         \r\n        if(a['Region'] !== b['Region']){\r\n          //1st sort by Region \r\n          return a['Region'] < b['Region'] ? -1 : 1;\r\n        }else if(a['Location'] !== b['Location']){\r\n          //2nd sort by Location \r\n          return a['Location'] < b['Location'] ? -1 : 1;\r\n        }else if(a['Name'] !== b['Name']){\r\n          //3rd sort by name\r\n          return a['Name'] < b['Name'] ? -1 : 1; \r\n        }else{\r\n          return 0;\r\n        }      \r\n      });\r\n      setDoctors(data);\r\n      \r\n      // get search keyword list --\r\n      //-// get Service Types --\r\n      let serviceTypes = data.map(item => item['Service Type']);\r\n      setServList(arrayUnique(serviceTypes.flat()));\r\n\r\n      //-// get regions --\r\n      const regions = data.map(item => item.Region);\r\n      setRegionList(arrayUnique(regions).sort());\r\n\r\n      //-// get locations --\r\n      const locations = data.map(item => item.Location);\r\n      setLocList(arrayUnique(locations).sort());      \r\n      \r\n      // [end] get search keyword list --            \r\n    });    \r\n  }, []);\r\n  // [end] fetch csv data --\r\n\r\n  let pageBody = <Spinner />;\r\n\r\n  if(doctors && servList && regionList && locList){\r\n    pageBody = <React.Fragment>        \r\n        <TextSearch \r\n          servList={servList} \r\n          regionList={regionList} \r\n          locList={locList} \r\n          nameTag={nameTag} \r\n          servTag={servTag} \r\n          regionTag={regionTag} \r\n          locTag={locTag} \r\n          invalidTag={invalidTag}\r\n          updated={searchTextHandler} />        \r\n        <DoctorsDetails doctors={filteredDr} fullListLength={doctors.length} />\r\n        <ScrollTopBtn/>\r\n      </React.Fragment>\r\n  }\r\n  return <div className=\"App\">\r\n      <header>\r\n        <div className=\"container\">\r\n          <img src={logo} alt=\"bowtiego\" className='logo'/>\r\n        </div>\r\n      </header>\r\n      {pageBody}\r\n    </div>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  \n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}